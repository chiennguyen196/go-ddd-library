openapi: "3.0.2"
info:
  title: Lending Service
  version: "1.0"
servers:
  - url: http://{hostname}/api/v1
    description: Local server
    variables:
      hostname:
        default: localhost:8080
  - url: https://{hostname}/api/v1
    description: Secure HTTP Server
    variables:
      hostname:
        default: localhost

security:
  - bearerAuth: [ ]

paths:
  /patrons/{patronId}/profile:
    get:
      operationId: getPatronProfile
      description: get patron profile
      tags:
        - Patron
      parameters:
        - in: path
          name: patronId
          schema:
            type: string
            format: uuid
            minimum: 0
          required: true
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                title: GetPatronProfileResponse
                type: object
                required: [ patronProfile ]
                properties:
                  patronProfile:
                    $ref: "#/components/schemas/PatronProfile"

  /patrons/{patronId}/holds:
    post:
      operationId: placeHold
      description: place hold a book
      tags:
        - Patron
      parameters:
        - in: path
          name: patronId
          schema:
            type: string
            format: uuid
            minimum: 0
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              title: PlaceHoldRequest
              properties:
                bookId:
                  type: string
                  format: uuid
                numOfDays:
                  type: integer
              required:
                - bookId
                - numOfDays
      responses:
        204:
          description: success

    delete:
      operationId: cancelHold
      description: cancel a hold
      tags:
        - Patron
      parameters:
        - in: path
          name: patronId
          schema:
            type: string
            format: uuid
            minimum: 0
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              title: CancelHoldRequest
              properties:
                bookId:
                  type: string
                  format: uuid
              required:
                - bookId
      responses:
        204:
          description: success

  /patrons/{patronId}/checkout:
    post:
      operationId: checkout
      description: checkout a book
      tags:
        - Patron
      parameters:
        - in: path
          name: patronId
          schema:
            type: string
            format: uuid
            minimum: 0
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              title: CheckoutRequest
              properties:
                bookId:
                  type: string
                  format: uuid
              required:
                - bookId
      responses:
        204:
          description: success


  /books/{bookId}/return:
    put:
      operationId: returnBook
      description: return a book
      tags:
        - Book
      parameters:
        - in: path
          name: bookId
          schema:
            type: string
            format: uuid
            minimum: 0
          required: true
      responses:
        204:
          description: success

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ErrorResponse:
      type: object
      properties:
        slug:
          type: string
        message:
          type: string
      required:
        - slug
        - message

    PatronProfile:
      type: object
      properties:
        patronId:
          type: string
          format: uuid
        patronType:
          $ref: "#/components/schemas/PatronType"
        holds:
          type: array
          items:
            $ref: "#/components/schemas/Hold"
        checkedOuts:
          type: array
          items:
            $ref: "#/components/schemas/CheckedOut"
        overdueCheckouts:
          type: array
          items:
            $ref: "#/components/schemas/OverdueCheckout"
      required:
        - patronId
        - patronType
        - holds
        - checkedOuts
        - overdueCheckouts

    PatronType:
      type: string
      nullable: false
      enum:
        - Regular
        - Researcher

    Hold:
      type: object
      properties:
        bookId:
          type: string
          format: uuid
        libraryBranchId:
          type: string
          format: uuid
        from:
          type: string
          format: date-time
        till:
          type: string
          format: date-time
        isOpenEnded:
          type: boolean
      required:
        - bookId
        - libraryBranchId
        - from
        - till
        - isOpenEnded

    CheckedOut:
      type: object
      properties:
        bookId:
          type: string
          format: uuid
        libraryBranchId:
          type: string
          format: uuid
        checkedOutAt:
          type: string
          format: date-time
      required:
        - bookId
        - libraryBranchId
        - checkedOutAt

    OverdueCheckout:
      type: object
      properties:
        bookId:
          type: string
          format: uuid
        libraryBranchId:
          type: string
          format: uuid
      required:
        - bookId
        - libraryBranchId
